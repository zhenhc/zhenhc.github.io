{"meta":{"title":"甄豪闯的个人网站","subtitle":"","description":"","author":"zhenhc","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Linux安装nginx","slug":"Linux安装nginx","date":"2022-02-06T06:01:25.000Z","updated":"2022-02-06T06:01:53.565Z","comments":true,"path":"2022/02/06/Linux安装nginx/","link":"","permalink":"http://example.com/2022/02/06/Linux%E5%AE%89%E8%A3%85nginx/","excerpt":"","text":"Linux安装nginx（没有编译环境） linux安装nginx (有编译环境) 1. Linux安装nginx（没有编译环境） 在linux下安装nginx，首先需要安装 gcc-c++编译器。然后安装nginx依赖的pcre和zlib包。最后安装nginx即可。 1.先安装gcc-c++编译器 12yum install gcc-c++yum install -y openssl openssl-devel 2.再安装pcre包 1yum install -y pcre pcre-devel 3.再安装zlib包 1yum install -y zlib zlib-devel 下面进行nginx的安装 在&#x2F;usr&#x2F;local&#x2F;下创建文件nginx文件 1mkdir /usr/local/nginx 在网上下nginx包上传至Linux（https://nginx.org/download/），也可以直接下载 1wget https://nginx.org/download/nginx-1.19.9.tar.gz 解压并进入nginx目录 12tar -zxvf nginx-1.19.9.tar.gzcd nginx-1.19.9 使用nginx默认配置 1./configure 自定义编译生成目录（可以把所有资源文件放在指定的路径中，不会杂乱，方便卸载软件或移植软件） 1./configure --prefix=/usr/local/test #推荐使用这种方式 编译安装 12makemake install 查找安装路径 1whereis nginx 进入sbin目录，可以看到有一个可执行文件nginx，直接**.&#x2F;nginx**执行就OK了。 1./nginx 查看是否启动成功 1ps -ef | grep nginx 然后在网页上访问自己的IP就可以了默认端口为80（出现如下欢迎界面就成功了！） 注意问题 如以上步骤都完成且没有问题的话，就做如下操作 防火墙 12查看防火墙是否开启systemctl status firewalld 启动防火墙后，默认没有开启任何端口，需要手动开启端口。nginx默认是80端口 123手动开启端口命令firewall-cmd --zone=public --add-port=80/tcp --permanent命令含义： --zone #作用域 --add-port=80/tcp #添加端口，格式为：端口/通讯协议 --permanent #永久生效，没有此参数重启后失效 开启后需要重启防火墙才生效 1systemctl restart firewalld.service 查看防火墙是否开启了80端口的访问 1firewall-cmd --list-all 开启后再次访问！！ 端口占用 如果启动后出现了如下的问题就是80端口被占用 可以用下面这个命令进行查看80端口被谁占用 1netstat -tunlp | grep 80 这里因为我之前开启了的是被nginx.master或者nginx.woeker占用就不用管，如果不是这个的话那就把那个进程关闭掉 1kill -9 进程号 关闭之后重启nginx再次访问！！ 2. linux安装nginx(有编译环境)参考 https://www.cnblogs.com/pxstar/p/14808244.html https://blog.csdn.net/qq_38621978/article/details/103647225 https://www.cnblogs.com/jingmoxukong/p/5945200.html","categories":[],"tags":[]},{"title":"Awsome Github Repository","slug":"Awsome-Github-Repository","date":"2022-02-06T02:20:29.000Z","updated":"2022-02-06T02:24:22.991Z","comments":true,"path":"2022/02/06/Awsome-Github-Repository/","link":"","permalink":"http://example.com/2022/02/06/Awsome-Github-Repository/","excerpt":"","text":"曾经帮助过我，以及正在帮助我，未来仍将会帮助我的github仓库地址 资料教程类 coding-interview-university ：A complete computer science study plan to become a software engineer. **CS-Notes**：📚 技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计 **JavaGuide**：「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！ **Python-100-Days**：Python - 100天从新手到大师 **the-art-of-command-line**：Master the command line, in one page ** fucking-algorithm**：刷算法全靠套路，认准 labuladong 就够了！English version supported! Crack LeetCode, not only how, but also why. **advanced-java**：😮 Core Interview Questions &amp; Answers For Experienced Java(Backend) Developers | 互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识 **mall-learning**：mall学习教程，架构、业务、技术要点全方位解析。mall项目（40k+star）是一套电商系统，使用现阶段主流技术实现。涵盖了SpringBoot 2.3.0、MyBatis 3.4.6、Elasticsearch 7.6.2、RabbitMQ 3.7.15、Redis 5.0、MongoDB 4.2.5、Mysql5.7等技术，采用Docker容器化部署。 ** JavaFamily**：【Java面试+Java学习指南】 一份涵盖大部分Java程序员所需要掌握的核心知识。 ** SpringAll**：循序渐进，学习Spring Boot、Spring Boot &amp; Shiro、Spring Batch、Spring Cloud、Spring Cloud Alibaba、Spring Security &amp; Spring Security OAuth2，博客Spring系列源码：https://mrbird.cc ** toBeTopJavaer**：To Be Top Javaer - Java工程师成神之路 **interview**：📚 C&#x2F;C++ 技术面试基础知识总结，包括语言、程序库、数据结构、算法、系统、网络、链接装载库等知识及面试经验、招聘、内推等信息。This repository is a summary of the basic knowledge of recruiting job seekers and beginners in the direction of C&#x2F;C++ technology, including language, program library, data structure, algorithm, system, network, link loading library, interview experience, recruitment, recommendatio… ** athena**：📓Java后端知识图谱 ** SpringBoot-Labs**：一个涵盖六个专栏：Spring Boot 2.X、Spring Cloud、Spring Cloud Alibaba、Dubbo、分布式消息队列、分布式事务的仓库。希望胖友小手一抖，右上角来个 Star，感恩 1024 ** Python**：最良心的 Python 教程： **Best-websites-a-programmer-should-visit**：🔗 Some useful websites for programmers. ** gold-miner**：🥇掘金翻译计划，可能是世界最大最好的英译中技术社区，最懂读者和译者的翻译平台： 算法类 **Python**：All Algorithms implemented in Python **Java**：All Algorithms implemented in Java **algs4**：Algorithms, 4th edition textbook code and libraries ** fucking-algorithm**：刷算法全靠套路，认准 labuladong 就够了！English version supported! Crack LeetCode, not only how, but also why. 实战项目类 **vue-element-admin**：🎉 A magical vue admin **java-design-patterns**：Design patterns implemented in Java **mall**：mall项目是一套电商系统，包括前台商城系统及后台管理系统，基于SpringBoot+MyBatis实现，采用Docker容器化部署。 前台商城系统包含首页门户、商品推荐、商品搜索、商品展示、购物车、订单流程、会员中心、客户服务、帮助中心等模块。 后台管理系统包含商品管理、订单管理、会员管理、促销管理、运营管理、内容管理、统计报表、财务管理、权限管理、设置等模块。 ** RuoYi-Vue**：🎉 (RuoYi)官方仓库 基于SpringBoot，Spring Security，JWT，Vue &amp; Element 的前后端分离权限管理系统，同时提供了 Vue3 的版本 **spring-boot-examples**：about learning Spring Boot via examples. Spring Boot 教程、技术栈示例代码，快速简单上手教程。 ** spring-boot-demo**：该项目已成功集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate(通用JDBC操作数据库)、JPA(强大的ORM框架)、mybatis(强大的ORM框架)、通用Mapper(快速操作Mybatis)、PageHelper(通用的Mybatis分页插件)、mybatis-plus(快速操作Mybatis)、BeetlSQL(强大的ORM框架)、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、ema… **Python**：My Python Examples ** vhr**：微人事是一个前后端分离的人力资源管理系统，项目采用SpringBoot+Vue开发。 ** SpringAll**：循序渐进，学习Spring Boot、Spring Boot &amp; Shiro、Spring Batch、Spring Cloud、Spring Cloud Alibaba、Spring Security &amp; Spring Security OAuth2，博客Spring系列源码：https://mrbird.cc ** halo**：✍ 一款现代化的开源博客&#x2F;CMS系统。 ** xxl-job**：A distributed task scheduling framework.（分布式任务调度平台XXL-JOB） ** eladmin**：项目基于 Spring Boot 2.1.0 、 Jpa、 Spring Security、redis、Vue的前后端分离的后台管理系统，项目采用分模块开发方式， 权限控制采用 RBAC，支持数据字典与数据权限管理，支持一键生成前后端代码，支持动态路由 ** lx-music-desktop**：一个基于 electron 的音乐软件 **dataease**：人人可用的开源数据可视化分析工具。 ** zfile**：在线云盘、网盘、OneDrive、云存储、私有云、对象存储、h5ai ** eladmin-web**：eladmin前端源码，项目基于 Spring Boot 2.1.0 、 Spring Boot Jpa、 Spring Security、Redis、Vue的前后端分离后台管理系统， 权限控制采用 RBAC，菜单动态路由 **shopizer**：Shopizer java e-commerce software hexo：A fast, simple &amp; powerful blog framework, powered by Node.js. 源码阅读类 **spring-boot**：Spring Boot **elasticsearch**：Free and Open, Distributed, RESTful Search Engine **redis**：Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps. ** guava**：Google core libraries for Java ** netty**：Netty project - an event-driven asynchronous network application framework 安卓项目类 **jadx**：Dex to Java decompiler scrcpy：Display and control your Android device NewPipe：A libre lightweight streaming front-end for Android. 有趣项目类 **ohmyzsh**：🙃 A delightful community-driven (with 2,000+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community. **PowerToys**：Windows system utilities to maximize productivity ** httpie**：As easy as &#x2F;aitch-tee-tee-pie&#x2F; 🥧 Modern, user-friendly command-line HTTP client for the API era. JSON support, colors, sessions, downloads, plugins &amp; more. https://twitter.com/httpie **12306**：12306智能刷票，订票 ** Mindustry**：The automation tower defense game ** free-python-games**：Free Python Games **rich**：Rich is a Python library for rich text and beautiful formatting in the terminal. scrapy：Scrapy, a fast high-level web crawling &amp; scraping framework for Python. netdata：Real-time performance monitoring, done right! https://www.netdata.cloud（监控linux操作系统） you-get：⏬ Dumb downloader that scrapes the web 其他教程网址链接 廖雪峰的官方网站 网道 阮一峰的个人网站","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-02-05T13:22:21.121Z","updated":"2022-02-06T02:08:08.908Z","comments":true,"path":"2022/02/05/hello-world/","link":"","permalink":"http://example.com/2022/02/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}